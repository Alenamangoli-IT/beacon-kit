// Code generated by github.com/fjl/gencodec. DO NOT EDIT.

package v1

import (
	"encoding/json"

	"github.com/itsdevbear/bolaris/types/consensus/primitives"
)

// MarshalJSON marshals as JSON.
func (w Withdrawal) MarshalJSON() ([]byte, error) {
	type Withdrawal struct {
		Index          uint64               `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
		ValidatorIndex primitives.SSZUint64 `protobuf:"varint,2,opt,name=validator_index,json=validatorIndex,proto3" json:"validatorIndex,omitempty" cast-type:"github.com/itsdevbear/bolaris/types/consensus/primitives.ValidatorIndex"`
		Address        []byte               `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty" ssz-size:"20"`
		Amount         uint64               `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
	}
	var enc Withdrawal
	enc.Index = w.Index
	enc.ValidatorIndex = w.ValidatorIndex
	enc.Address = w.Address
	enc.Amount = w.Amount
	return json.Marshal(&enc)
}

// UnmarshalJSON unmarshals from JSON.
func (w *Withdrawal) UnmarshalJSON(input []byte) error {
	type Withdrawal struct {
		Index          *uint64               `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
		ValidatorIndex *primitives.SSZUint64 `protobuf:"varint,2,opt,name=validator_index,json=validatorIndex,proto3" json:"validatorIndex,omitempty" cast-type:"github.com/itsdevbear/bolaris/types/consensus/primitives.ValidatorIndex"`
		Address        []byte                `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty" ssz-size:"20"`
		Amount         *uint64               `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
	}
	var dec Withdrawal
	if err := json.Unmarshal(input, &dec); err != nil {
		return err
	}
	if dec.Index != nil {
		w.Index = *dec.Index
	}
	if dec.ValidatorIndex != nil {
		w.ValidatorIndex = *dec.ValidatorIndex
	}
	if dec.Address != nil {
		w.Address = dec.Address
	}
	if dec.Amount != nil {
		w.Amount = *dec.Amount
	}
	return nil
}
