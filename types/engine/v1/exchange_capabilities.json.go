// Code generated by github.com/fjl/gencodec. DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// MarshalJSON marshals as JSON.
func (e ExchangeCapabilities) MarshalJSON() ([]byte, error) {
	type ExchangeCapabilities struct {
		SupportedMethods []string `protobuf:"bytes,1,rep,name=supported_methods,json=supportedMethods,proto3" json:"supported_methods,omitempty"`
	}
	var enc ExchangeCapabilities
	enc.SupportedMethods = e.SupportedMethods
	return json.Marshal(&enc)
}

// UnmarshalJSON unmarshals from JSON.
func (e *ExchangeCapabilities) UnmarshalJSON(input []byte) error {
	type ExchangeCapabilities struct {
		SupportedMethods []string `protobuf:"bytes,1,rep,name=supported_methods,json=supportedMethods,proto3" json:"supported_methods,omitempty"`
	}
	var dec ExchangeCapabilities
	if err := json.Unmarshal(input, &dec); err != nil {
		return err
	}
	if dec.SupportedMethods != nil {
		e.SupportedMethods = dec.SupportedMethods
	}
	return nil
}
