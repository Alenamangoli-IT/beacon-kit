# SPDX-License-Identifier: MIT
#
# Copyright (c) 2024 Berachain Foundation
#
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this software and associated documentation
# files (the "Software"), to deal in the Software without
# restriction, including without limitation the rights to use,
# copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following
# conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.

name: release

on:
  push:
    tags:
      - 'v*'
    branches:
      - 'release/*'

env:
  REPO_NAME: "beacon-kit"
  
jobs:
  extract-version:
    name: extract version
    runs-on: ubuntu-latest
    steps:
      - name: Extract version
        run: echo "VERSION=$(echo ${GITHUB_REF#refs/tags/})" >> $GITHUB_OUTPUT
        id: extract_version
    outputs:
      VERSION: ${{ steps.extract_version.outputs.VERSION }}

  build-linux:
    runs-on: ubuntu-latest
    needs: extract-version
    strategy:
      matrix:
        arch: [amd64, arm64]
        targetos: [linux]

    name: beacond-${{ matrix.targetos }}-${{ matrix.arch }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: "^1.22"
        env:
          GOOS: ${{ matrix.targetos }}
          GOARCH: ${{ matrix.arch }}

      # Build and capture an artifact
      - name: Build beacond
        run: |
          make build-${{ matrix.targetos }}-${{ matrix.arch }}-${{ needs.extract-version.outputs.VERSION }}
          tar -czvf beacond-${{ matrix.targetos }}-${{ matrix.arch }}-${{ needs.extract-version.outputs.VERSION }}.tar.gz -C build/bin .

      # Uploads binaries
      - uses: actions/upload-artifact@v3
        with:
          name: beacond-${{ matrix.targetos }}-${{ matrix.arch }}-${{ needs.extract-version.outputs.VERSION }}
          path: beacond-${{ matrix.targetos }}-${{ matrix.arch }}-${{ needs.extract-version.outputs.VERSION }}.tar.gz

  build-mac:
    runs-on: macos-latest
    needs: extract-version
    strategy:
      matrix:
        arch: [arm64]
        targetos: [darwin]

    name: beacond-${{ matrix.targetos }}-${{ matrix.arch }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: "^1.22"
        env:
          GOOS: ${{ matrix.targetos }}
          GOARCH: ${{ matrix.arch }}
          CGO_CFLAGS: "-O -D__BLST_PORTABLE__"
          CGO_CFLAGS_ALLOW: "-O -D__BLST_PORTABLE__"

      # Build and capture an artifact
      - name: Build beacond
        run: |
          make build-${{ matrix.targetos }}-${{ matrix.arch }}-${{ needs.extract-version.outputs.VERSION }}
          tar -czvf beacond-${{ matrix.targetos }}-${{ matrix.arch }}-${{ needs.extract-version.outputs.VERSION }}.tar.gz -C build/bin .

      # Uploads binaries
      - uses: actions/upload-artifact@v3
        with:
          name: beacond-${{ matrix.targetos }}-${{ matrix.arch }}-${{ needs.extract-version.outputs.VERSION }}
          path: beacond-${{ matrix.targetos }}-${{ matrix.arch }}-${{ needs.extract-version.outputs.VERSION }}.tar.gz

  draft-release:
    runs-on: ubuntu-latest
    needs: [build-linux, build-mac, extract-version]
    env:
      VERSION: ${{ needs.extract-version.outputs.VERSION }}
    permissions:
      # Required to post the release
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # This is necessary for generating the changelog.
      # It has to come before "Download Artifacts" or else it deletes the artifacts.
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: .
      - name: Generate full changelog
        id: changelog
        run: |
          echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
          echo "$(git log --pretty=format:"- %s" $(git describe --tags --abbrev=0 ${{ env.VERSION }}^)..${{ env.VERSION }})" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create release draft
        env:
          GITHUB_USER: ${{ github.repository_owner }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # The formatting here is borrowed from Lighthouse (which is borrowed from OpenEthereum):
        # https://github.com/openethereum/openethereum/blob/6c2d392d867b058ff867c4373e40850ca3f96969/.github/workflows/build.yml
        run: |
          body=$(cat <<- "ENDBODY"
          ![image](https://github.com/berachain/beacon-kit/raw/main/.github/assets/banner.png)

          ## Testing Checklist (DELETE ME)

          - [ ] Run on testnet for 1-3 days.
          - [ ] Resync a mainnet node.
          - [ ] Ensure all CI checks pass.

          ## Release Checklist (DELETE ME)

          - [ ] Ensure all crates have had their versions bumped.
          - [ ] Write the summary.
          - [ ] Fill out the update priority.
          - [ ] Ensure all binaries have been added.
          - [ ] Prepare release posts (Twitter, ...).

          ## Summary

          Add a summary, including:

          - Critical bug fixes
          - New features
          - Any breaking changes (and what to expect)

          ## Update Priority

          This table provides priorities for which classes of users should update particular components.

          | User Class           | Priority        |
          |----------------------|-----------------|
          | Payload Builders     | <TODO> |
          | Non-Payload Builders | <TODO>    |


          ## All Changes

          ${{ steps.changelog.outputs.CHANGELOG }}

          ## Binaries

          | System | Architecture | Binary | PGP Signature |
          |:---:|:---:|:---:|:---|
          | <img src="https://simpleicons.org/icons/linux.svg" style="width: 32px;"/> | x86_64 | [beacond-${{ env.VERSION }}-linux-amd64.tar.gz](https://github.com/${{ env.REPO_NAME }}/releases/download/${{ env.VERSION }}/beacond-${{ env.VERSION }}-linux-amd64.tar.gz) | [PGP Signature](https://github.com/${{ env.REPO_NAME }}/releases/download/${{ env.VERSION }}/beacond-${{ env.VERSION }}-linux-amd64.tar.gz.asc) |
          | <img src="https://simpleicons.org/icons/linux.svg" style="width: 32px;"/> | aarch64 | [beacond-${{ env.VERSION }}-linux-arm64.tar.gz](https://github.com/${{ env.REPO_NAME }}/releases/download/${{ env.VERSION }}/beacond-${{ env.VERSION }}-linux-arm64.tar.gz) | [PGP Signature](https://github.com/${{ env.REPO_NAME }}/releases/download/${{ env.VERSION }}/beacond-${{ env.VERSION }}-linux-arm64.tar.gz.asc) |
          | <img src="https://simpleicons.org/icons/windows.svg" style="width: 32px;"/> | x86_64 | [beacond-${{ env.VERSION }}-windows-amd64.tar.gz](https://github.com/${{ env.REPO_NAME }}/releases/download/${{ env.VERSION }}/beacond-${{ env.VERSION }}-windows-amd64.tar.gz) | [PGP Signature](https://github.com/${{ env.REPO_NAME }}/releases/download/${{ env.VERSION }}/beacond-${{ env.VERSION }}-windows-amd64.tar.gz.asc) |
          | <img src="https://simpleicons.org/icons/apple.svg" style="width: 32px;"/> | x86_64 | [beacond-${{ env.VERSION }}-darwin-amd64.tar.gz](https://github.com/${{ env.REPO_NAME }}/releases/download/${{ env.VERSION }}/beacond-${{ env.VERSION }}-darwin-amd64.tar.gz) | [PGP Signature](https://github.com/${{ env.REPO_NAME }}/releases/download/${{ env.VERSION }}/beacond-${{ env.VERSION }}-darwin-amd64.tar.gz.asc) |
          | <img src="https://simpleicons.org/icons/apple.svg" style="width: 32px;"/> | aarch64 | [beacond-${{ env.VERSION }}-darwin-arm64.tar.gz](https://github.com/${{ env.REPO_NAME }}/releases/download/${{ env.VERSION }}/beacond-${{ env.VERSION }}-darwin-arm64.tar.gz) | [PGP Signature](https://github.com/${{ env.REPO_NAME }}/releases/download/${{ env.VERSION }}/beacond-${{ env.VERSION }}-darwin-arm64.tar.gz.asc) |
          | | | | |
          | **System** | **Option** | - | **Resource** |
          | <img src="https://simpleicons.org/icons/docker.svg" style="width: 32px;"/> | Docker | | [${{ env.IMAGE_NAME }}](https://ghcr.io/berachain/beacon-kit) |
          ENDBODY
          )
          assets=()
          for asset in ./build/bin/*beacond-*.tar.gz*; do
              assets+=("$asset/$asset")
          done
          tag_name="${{ env.VERSION }}"
          echo "$body" | gh release create --draft -t "BeaconKit $tag_name" -F "-" "$tag_name" "${assets[@]}"