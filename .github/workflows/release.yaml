# SPDX-License-Identifier: MIT
#
# Copyright (c) 2024 Berachain Foundation
#
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this software and associated documentation
# files (the "Software"), to deal in the Software without
# restriction, including without limitation the rights to use,
# copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following
# conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.

name: release

on:
  push:
    tags:
      - 'v*'
    branches:
      - 'release/*'

jobs:
  extract-version:
    name: extract version
    runs-on: ubuntu-latest
    steps:
      - name: Extract version
        run: echo "VERSION=$(echo ${GITHUB_REF#refs/tags/})" >> $GITHUB_OUTPUT
        id: extract_version
    outputs:
      VERSION: ${{ steps.extract_version.outputs.VERSION }}

  build-linux:
    runs-on: ubuntu-latest
    needs: extract-version
    strategy:
      matrix:
        arch: [amd64, arm64]
        targetos: [linux]

    name: beacond-${{ matrix.targetos }}-${{ matrix.arch }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: "^1.22"
        env:
          GOOS: ${{ matrix.targetos }}
          GOARCH: ${{ matrix.arch }}

      # Build and capture an artifact
      - name: Build beacond
        run: |
          make build-${{ matrix.targetos }}-${{ matrix.arch }}-${{ needs.extract-version.outputs.VERSION }}

      # Uploads binaries
      - uses: actions/upload-artifact@v3
        with:
          name: beacond-${{ matrix.targetos }}-${{ matrix.arch }}-${{ needs.extract-version.outputs.VERSION }}
          path: build/bin

  build-mac:
    runs-on: macos-latest
    needs: extract-version
    strategy:
      matrix:
        arch: [arm64]
        targetos: [darwin]

    name: beacond-${{ matrix.targetos }}-${{ matrix.arch }}-${{ needs.extract-version.outputs.VERSION }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: "^1.22"
        env:
          GOOS: ${{ matrix.targetos }}
          GOARCH: ${{ matrix.arch }}
          CGO_CFLAGS: "-O -D__BLST_PORTABLE__"
          CGO_CFLAGS_ALLOW: "-O -D__BLST_PORTABLE__"

      # Build and capture an artifact
      - name: Build beacond
        run: |
          make build-${{ matrix.targetos }}-${{ matrix.arch }}-${{ needs.extract-version.outputs.VERSION }}

      # Uploads binaries
      - uses: actions/upload-artifact@v3
        with:
          name: beacond-${{ matrix.targetos }}-${{ matrix.arch }}-${{ needs.extract-version.outputs.VERSION }}
          path: build/bin

  draft-release:
    runs-on: ubuntu-latest
    needs: [build-linux, build-mac, extract-version]
    env:
      VERSION: ${{ needs.extract-version.outputs.VERSION }}
    permissions:
      # Required to post the release
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # This is necessary for generating the changelog.
      # It has to come before "Download Artifacts" or else it deletes the artifacts.
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: .
      - name: Generate full changelog
        id: changelog
        run: |
          echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
          echo "$(git log --pretty=format:"- %s" $(git describe --tags --abbrev=0 ${{ env.VERSION }}^)..${{ env.VERSION }})" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Draft Release
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          files: |
            ./beacond-linux-arm64/beacond-linux-arm64-${{ env.VERSION }}
            ./beacond-linux-amd64/beacond-linux-amd64-${{ env.VERSION }}
            ./beacond-darwin-arm64/beacond-darwin-arm64-${{ env.VERSION }}
        env:
          GIT_TOKEN: ${{ secrets.DEV_PAT }}
