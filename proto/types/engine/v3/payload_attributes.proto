// SPDX-License-Identifier: MIT
//
// Copyright (c) 2023 Berachain Foundation
//
// Permission is hereby granted, free of charge, to any person
// obtaining a copy of this software and associated documentation
// files (the "Software"), to deal in the Software without
// restriction, including without limitation the rights to use,
// copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following
// conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
// OTHER DEALINGS IN THE SOFTWARE.

syntax = "proto3";

package types.engine.v3;

import "ethereum/eth/ext/options.proto";
import "types/engine/v1/withdrawal.proto";

option go_package = "github.com/itsdevbear/bolaris/types/engine/v3";

// PayloadAttributesV2 is the payload attributes for the Deneb upgrade.
message PayloadAttributesV3 {
  // The timestamp at which the payload is proposed.
  uint64 timestamp = 1;
  // The RANDAO mix of the previous block.
  bytes prev_randao = 2 [(ethereum.eth.ext.ssz_size) = "32"];
  // The suggested address to receive the transaction fee.
  bytes suggested_fee_recipient = 3 [(ethereum.eth.ext.ssz_size) = "20"];
  // A list of withdrawals included in the payload, introduced in the Capella upgrade.
  repeated types.engine.v1.Withdrawal withdrawals = 4 [(ethereum.eth.ext.ssz_max) = "withdrawal.size"];
  // The root of the beacon block that the payload is proposing.
  bytes parent_beacon_block_root = 5 [(ethereum.eth.ext.ssz_size) = "32"];
}
